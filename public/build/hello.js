var Module = (() => {
  var _scriptName = import.meta.url;
  
  return (
async function(moduleArg = {}) {
  var moduleRtn;

var Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var arguments_=[];var thisProgram="./this.program";var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptName){scriptDirectory=_scriptName}if(scriptDirectory.startsWith("blob:")){scriptDirectory=""}else{scriptDirectory=scriptDirectory.slice(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1)}{readAsync=async url=>{var response=await fetch(url,{credentials:"same-origin"});if(response.ok){return response.arrayBuffer()}throw new Error(response.status+" : "+response.url)}}}else{}var out=console.log.bind(console);var err=console.error.bind(console);var wasmBinary;var wasmMemory;var ABORT=false;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAP64,HEAPU64,HEAPF64;var runtimeInitialized=false;var emscriptenMemoryProfiler={detailedHeapUsage:true,trackedCallstackMinSizeBytes:typeof(new Error).stack=="undefined"?Infinity:16*1024*1024,trackedCallstackMinAllocCount:typeof(new Error).stack=="undefined"?Infinity:1e4,hookStackAlloc:true,uiUpdateIntervalMsecs:2e3,allocationsAtLoc:{},allocationSitePtrs:{},sizeOfAllocatedPtr:{},sizeOfPreRunAllocatedPtr:{},resizeMemorySources:[],sbrkSources:[],pagePreRunIsFinished:false,totalMemoryAllocated:0,totalTimesMallocCalled:0,totalTimesFreeCalled:0,stackTopWatermark:Infinity,canvas:null,drawContext:null,truncDec(f=0){var str=f.toFixed(2);if(str.includes(".00",str.length-3))return str.slice(0,-3);else if(str.includes("0",str.length-1))return str.slice(0,-1);else return str},formatBytes(bytes){if(bytes>=1e3*1024*1024)return emscriptenMemoryProfiler.truncDec(bytes/(1024*1024*1024))+" GB";else if(bytes>=1e3*1024)return emscriptenMemoryProfiler.truncDec(bytes/(1024*1024))+" MB";else if(bytes>=1e3)return emscriptenMemoryProfiler.truncDec(bytes/1024)+" KB";else return emscriptenMemoryProfiler.truncDec(bytes)+" B"},hsvToRgb(h,s,v){var h_i=h*6|0;var f=h*6-h_i;var p=v*(1-s);var q=v*(1-f*s);var t=v*(1-(1-f)*s);var r,g,b;switch(h_i){case 0:r=v;g=t;b=p;break;case 1:r=q;g=v;b=p;break;case 2:r=p;g=v;b=t;break;case 3:r=p;g=q;b=v;break;case 4:r=t;g=p;b=v;break;case 5:r=v;g=p;b=q;break}function toHex(v){v=(v*255|0).toString(16);return v.length==1?"0"+v:v}return"#"+toHex(r)+toHex(g)+toHex(b)},onSbrkGrow(oldLimit,newLimit){var self=emscriptenMemoryProfiler;if(self.sbrkSources.length==0){self.sbrkSources.push({stack:"initial heap sbrk limit<br>",begin:0,end:oldLimit,color:self.hsvToRgb(self.sbrkSources.length*.618033988749895%1,.5,.95)})}if(newLimit<=oldLimit)return;self.sbrkSources.push({stack:self.filterCallstackForHeapResize((new Error).stack.toString()),begin:oldLimit,end:newLimit,color:self.hsvToRgb(self.sbrkSources.length*.618033988749895%1,.5,.95)})},onMemoryResize(oldSize,newSize){var self=emscriptenMemoryProfiler;if(self.resizeMemorySources.length==0){self.resizeMemorySources.push({stack:"initial heap size<br>",begin:0,end:oldSize,color:self.resizeMemorySources.length%2?"#ff00ff":"#ff80ff"})}if(newSize<=oldSize)return;self.resizeMemorySources.push({stack:self.filterCallstackForHeapResize((new Error).stack.toString()),begin:oldSize,end:newSize,color:self.resizeMemorySources.length%2?"#ff00ff":"#ff80ff"});console.log("memory resize: "+oldSize+" "+newSize)},recordStackWatermark(){if(typeof runtimeInitialized=="undefined"||runtimeInitialized){var self=emscriptenMemoryProfiler;self.stackTopWatermark=Math.min(self.stackTopWatermark,_emscripten_stack_get_current())}},onMalloc(ptr,size){if(!ptr)return;if(emscriptenMemoryProfiler.sizeOfAllocatedPtr[ptr]){return}var self=emscriptenMemoryProfiler;self.totalMemoryAllocated+=size;++self.totalTimesMallocCalled;self.recordStackWatermark();self.sizeOfAllocatedPtr[ptr]=size;if(!self.pagePreRunIsFinished)self.sizeOfPreRunAllocatedPtr[ptr]=size;var loc=(new Error).stack.toString();self.allocationsAtLoc[loc]||=[0,0,self.filterCallstackForMalloc(loc)];self.allocationsAtLoc[loc][0]+=1;self.allocationsAtLoc[loc][1]+=size;self.allocationSitePtrs[ptr]=loc},onFree(ptr){if(!ptr)return;var self=emscriptenMemoryProfiler;var sz=self.sizeOfAllocatedPtr[ptr];if(!isNaN(sz))self.totalMemoryAllocated-=sz;else{return}self.recordStackWatermark();var loc=self.allocationSitePtrs[ptr];if(loc){var allocsAtThisLoc=self.allocationsAtLoc[loc];if(allocsAtThisLoc){allocsAtThisLoc[0]-=1;allocsAtThisLoc[1]-=sz;if(allocsAtThisLoc[0]<=0)delete self.allocationsAtLoc[loc]}}delete self.allocationSitePtrs[ptr];delete self.sizeOfAllocatedPtr[ptr];delete self.sizeOfPreRunAllocatedPtr[ptr];++self.totalTimesFreeCalled},onRealloc(oldAddress,newAddress,size){emscriptenMemoryProfiler.onFree(oldAddress);emscriptenMemoryProfiler.onMalloc(newAddress,size)},onPreloadComplete(){emscriptenMemoryProfiler.pagePreRunIsFinished=true},initialize(){Module["onMalloc"]=(ptr,size)=>emscriptenMemoryProfiler.onMalloc(ptr,size);Module["onRealloc"]=(oldAddress,newAddress,size)=>emscriptenMemoryProfiler.onRealloc(oldAddress,newAddress,size);Module["onFree"]=ptr=>emscriptenMemoryProfiler.onFree(ptr);emscriptenMemoryProfiler.recordStackWatermark();Module["preRun"]||=[];Module["preRun"].push(emscriptenMemoryProfiler.onPreloadComplete);if(emscriptenMemoryProfiler.hookStackAlloc&&typeof stackAlloc=="function"){var prevStackAlloc=stackAlloc;var hookedStackAlloc=size=>{var ptr=prevStackAlloc(size);emscriptenMemoryProfiler.recordStackWatermark();return ptr};stackAlloc=hookedStackAlloc}if(location.search.toLowerCase().includes("trackbytes=")){emscriptenMemoryProfiler.trackedCallstackMinSizeBytes=parseInt(location.search.slice(location.search.toLowerCase().indexOf("trackbytes=")+"trackbytes=".length),undefined)}if(location.search.toLowerCase().includes("trackcount=")){emscriptenMemoryProfiler.trackedCallstackMinAllocCount=parseInt(location.search.slice(location.search.toLowerCase().indexOf("trackcount=")+"trackcount=".length),undefined)}emscriptenMemoryProfiler.memoryprofiler_summary=document.getElementById("memoryprofiler_summary");var div;if(!emscriptenMemoryProfiler.memoryprofiler_summary){div=document.createElement("div");div.innerHTML="<div style='border: 2px solid black; padding: 2px;'><canvas style='border: 1px solid black; margin-left: auto; margin-right: auto; display: block;' id='memoryprofiler_canvas' width='100%' height='50'></canvas><input type='checkbox' id='showHeapResizes' onclick='emscriptenMemoryProfiler.updateUi()'>Display heap and sbrk() resizes. Filter sbrk() and heap resize callstacks by keywords: <input type='text' id='sbrkFilter'>(reopen page with ?sbrkFilter=foo,bar query params to prepopulate this list)<br/>Track all allocation sites larger than <input id='memoryprofiler_min_tracked_alloc_size' type=number value="+emscriptenMemoryProfiler.trackedCallstackMinSizeBytes+"></input> bytes, and all allocation sites with more than <input id='memoryprofiler_min_tracked_alloc_count' type=number value="+emscriptenMemoryProfiler.trackedCallstackMinAllocCount+"></input> outstanding allocations. (visit this page via URL query params foo.html?trackbytes=1000&trackcount=100 to apply custom thresholds starting from page load)<br/><div id='memoryprofiler_summary'></div><input id='memoryprofiler_clear_alloc_stats' type='button' value='Clear alloc stats' ></input><br />Sort allocations by:<select id='memoryProfilerSort'><option value='bytes'>Bytes</option><option value='count'>Count</option><option value='fixed'>Fixed</option></select><div id='memoryprofiler_ptrs'></div>"}var populateHtmlBody=function(){if(div){document.body.appendChild(div);function getValueOfParam(key){var results=new RegExp("[\\?&]"+key+"=([^&#]*)").exec(location.href);return results?results[1]:""}if(document.getElementById("sbrkFilter").value=getValueOfParam("sbrkFilter")){document.getElementById("showHeapResizes").checked=true}}var self=emscriptenMemoryProfiler;self.memoryprofiler_summary=document.getElementById("memoryprofiler_summary");self.memoryprofiler_ptrs=document.getElementById("memoryprofiler_ptrs");document.getElementById("memoryprofiler_min_tracked_alloc_size").addEventListener("change",function(e){self.trackedCallstackMinSizeBytes=parseInt(this.value,undefined)});document.getElementById("memoryprofiler_min_tracked_alloc_count").addEventListener("change",function(e){self.trackedCallstackMinAllocCount=parseInt(this.value,undefined)});document.getElementById("memoryprofiler_clear_alloc_stats").addEventListener("click",e=>{self.allocationsAtLoc={};self.allocationSitePtrs={}});self.canvas=document.getElementById("memoryprofiler_canvas");self.canvas.width=document.documentElement.clientWidth-32;self.drawContext=self.canvas.getContext("2d");self.updateUi();setInterval(()=>emscriptenMemoryProfiler.updateUi(),self.uiUpdateIntervalMsecs)};if(document.body)populateHtmlBody();else setTimeout(populateHtmlBody,1e3)},bytesToPixelsRoundedDown(bytes){return bytes*emscriptenMemoryProfiler.canvas.width*emscriptenMemoryProfiler.canvas.height/HEAP8.length|0},bytesToPixelsRoundedUp(bytes){return(bytes*emscriptenMemoryProfiler.canvas.width*emscriptenMemoryProfiler.canvas.height+HEAP8.length-1)/HEAP8.length|0},fillLine(startBytes,endBytes){var self=emscriptenMemoryProfiler;var startPixels=self.bytesToPixelsRoundedDown(startBytes);var endPixels=self.bytesToPixelsRoundedUp(endBytes);var x0=startPixels/self.canvas.height|0;var y0=startPixels-x0*self.canvas.height;var x1=endPixels/self.canvas.height|0;var y1=endPixels-x1*self.canvas.height;if(y0>0&&x0<x1){self.drawContext.fillRect(x0,y0,1,self.canvas.height-y0);y0=0;++x0}if(y1<self.canvas.height&&x0<x1){self.drawContext.fillRect(x1,0,1,y1);y1=self.canvas.height-1;--x1}self.drawContext.fillRect(x0,0,x1-x0+1,self.canvas.height)},fillRect(startBytes,endBytes,heightPercentage){var self=emscriptenMemoryProfiler;var startPixels=self.bytesToPixelsRoundedDown(startBytes);var endPixels=self.bytesToPixelsRoundedUp(endBytes);var x0=startPixels/self.canvas.height|0;var x1=endPixels/self.canvas.height|0;self.drawContext.fillRect(x0,self.canvas.height*(1-heightPercentage),x1-x0+1,self.canvas.height)},countOpenALAudioDataSize(){if(typeof AL=="undefined"||!AL.currentContext)return 0;var totalMemory=0;for(var i in AL.currentContext.buf){var buffer=AL.currentContext.buf[i];for(var channel=0;channel<buffer.numberOfChannels;++channel)totalMemory+=buffer.getChannelData(channel).length*4}return totalMemory},printAllocsWithCyclingColors(colors,allocs){var colorIndex=0;for(var i in allocs){emscriptenMemoryProfiler.drawContext.fillStyle=colors[colorIndex];colorIndex=(colorIndex+1)%colors.length;var start=i|0;var sz=allocs[start]|0;emscriptenMemoryProfiler.fillLine(start,start+sz)}},filterURLsFromCallstack(callstack){callstack=callstack.replace(/@((file)|(http))[\w:\/\.]*\/([\w\.]*)/g,"@$4");callstack=callstack.replace(/\n/g,"<br />");return callstack},filterCallstackAfterFunctionName(callstack,func){var i=callstack.indexOf(func);if(i!=-1){var end=callstack.indexOf("<br />",i);if(end!=-1){return callstack.slice(0,end)}}return callstack},filterCallstackForMalloc(callstack){var i=callstack.indexOf("emscripten_trace_record_");if(i!=-1){callstack=callstack.slice(callstack.indexOf("\n",i)+1)}return emscriptenMemoryProfiler.filterURLsFromCallstack(callstack)},filterCallstackForHeapResize(callstack){var i=callstack.indexOf("emscripten_asm_const_iii");var j=callstack.indexOf("growMemory");i=i==-1?j:j==-1?i:Math.min(i,j);if(i!=-1){callstack=callstack.slice(callstack.indexOf("\n",i)+1)}callstack=callstack.replace(/(wasm-function\[\d+\]):0x[0-9a-f]+/g,"$1");return emscriptenMemoryProfiler.filterURLsFromCallstack(callstack)},printHeapResizeLog(heapResizes){var html="";for(var i=0;i<heapResizes.length;++i){var j=i+1;while(j<heapResizes.length){if((heapResizes[j].filteredStack||heapResizes[j].stack)==(heapResizes[i].filteredStack||heapResizes[i].stack)){++j}else{break}}var resizeFirst=heapResizes[i];var resizeLast=heapResizes[j-1];var count=j-i;html+='<div style="background-color: '+resizeFirst.color+'"><b>'+resizeFirst.begin+"-"+resizeLast.end+" ("+count+" times, "+emscriptenMemoryProfiler.formatBytes(resizeLast.end-resizeFirst.begin)+")</b>:"+(resizeFirst.filteredStack||resizeFirst.stack)+"</div><br>";i=j-1}return html},updateUi(){if(document.body.style.overflow!="")document.body.style.overflow="";function colorBar(color){return'<span style="padding:0px; border:solid 1px black; width:28px;height:14px; vertical-align:middle; display:inline-block; background-color:'+color+';"></span>'}function nBits(n){var i=0;while(n>=1){++i;n/=2}return i}function toHex(i,width){var str=i.toString(16);while(str.length<width)str="0"+str;return"0x"+str}var self=emscriptenMemoryProfiler;if(self.canvas.width!=document.documentElement.clientWidth-32){self.canvas.width=document.documentElement.clientWidth-32}if(typeof runtimeInitialized!="undefined"&&!runtimeInitialized){return}var stackBase=_emscripten_stack_get_base();var stackMax=_emscripten_stack_get_end();var stackCurrent=_emscripten_stack_get_current();var width=(nBits(HEAP8.length)+3)/4;var html="Total HEAP size: "+self.formatBytes(HEAP8.length)+".";html+="<br />"+colorBar("#202020")+"STATIC memory area size: "+self.formatBytes(stackMax-1024);html+=". 1024: "+toHex(1024,width);html+="<br />"+colorBar("#FF8080")+"STACK memory area size: "+self.formatBytes(stackBase-stackMax);html+=". STACK_BASE: "+toHex(stackBase,width);html+=". STACKTOP: "+toHex(stackCurrent,width);html+=". STACK_MAX: "+toHex(stackMax,width)+".";html+="<br />STACK memory area used now (should be zero): "+self.formatBytes(stackBase-stackCurrent)+"."+colorBar("#FFFF00")+" STACK watermark highest seen usage (approximate lower-bound!): "+self.formatBytes(stackBase-self.stackTopWatermark);var heap_base=Module["___heap_base"];var heap_end=_sbrk(0);html+="<br />DYNAMIC memory area size: "+self.formatBytes(heap_end-heap_base);html+=". start: "+toHex(heap_base,width);html+=". end: "+toHex(heap_end,width)+".";html+="<br />"+colorBar("#6699CC")+colorBar("#003366")+colorBar("#0000FF")+"DYNAMIC memory area used: "+self.formatBytes(self.totalMemoryAllocated)+" ("+(self.totalMemoryAllocated*100/(HEAP8.length-heap_base)).toFixed(2)+"% of all dynamic memory and unallocated heap)";html+="<br />Free memory: "+colorBar("#70FF70")+"DYNAMIC: "+self.formatBytes(heap_end-heap_base-self.totalMemoryAllocated)+", "+colorBar("#FFFFFF")+"Unallocated HEAP: "+self.formatBytes(HEAP8.length-heap_end)+" ("+((HEAP8.length-heap_base-self.totalMemoryAllocated)*100/(HEAP8.length-heap_base)).toFixed(2)+"% of all dynamic memory and unallocated heap)";var preloadedMemoryUsed=0;for(var i in self.sizeOfPreRunAllocatedPtr)preloadedMemoryUsed+=self.sizeOfPreRunAllocatedPtr[i]|0;html+="<br />"+colorBar("#FF9900")+colorBar("#FFDD33")+"Preloaded memory used, most likely memory reserved by files in the virtual filesystem : "+self.formatBytes(preloadedMemoryUsed);html+="<br />OpenAL audio data: "+self.formatBytes(self.countOpenALAudioDataSize())+" (outside HEAP)";html+="<br /># of total malloc()s/free()s performed in app lifetime: "+self.totalTimesMallocCalled+"/"+self.totalTimesFreeCalled+" (currently alive pointers: "+(self.totalTimesMallocCalled-self.totalTimesFreeCalled)+")";self.drawContext.fillStyle="#FFFFFF";self.drawContext.fillRect(0,0,self.canvas.width,self.canvas.height);self.drawContext.fillStyle="#FF8080";self.fillLine(stackMax,stackBase);self.drawContext.fillStyle="#FFFF00";self.fillLine(self.stackTopWatermark,stackBase);self.drawContext.fillStyle="#FF0000";self.fillLine(stackCurrent,stackBase);self.drawContext.fillStyle="#70FF70";self.fillLine(heap_base,heap_end);if(self.detailedHeapUsage){self.printAllocsWithCyclingColors(["#6699CC","#003366","#0000FF"],self.sizeOfAllocatedPtr);self.printAllocsWithCyclingColors(["#FF9900","#FFDD33"],self.sizeOfPreRunAllocatedPtr)}else{self.drawContext.fillStyle="#0000FF";self.fillLine(heap_base,heap_base+self.totalMemoryAllocated)}if(document.getElementById("showHeapResizes").checked){for(var i in self.resizeMemorySources){var resize=self.resizeMemorySources[i];self.drawContext.fillStyle=resize.color;self.fillRect(resize.begin,resize.end,.5)}var uniqueSources={};var filterWords=document.getElementById("sbrkFilter").value.split(",");for(var i in self.sbrkSources){var sbrk=self.sbrkSources[i];var stack=sbrk.stack;for(var j in filterWords){var s=filterWords[j].trim();if(s.length>0)stack=self.filterCallstackAfterFunctionName(stack,s)}sbrk.filteredStack=stack;uniqueSources[stack]||=self.hsvToRgb(Object.keys(uniqueSources).length*.618033988749895%1,.5,.95);self.drawContext.fillStyle=sbrk.color=uniqueSources[stack];self.fillRect(sbrk.begin,sbrk.end,.25)}function line(x0,y0,x1,y1){self.drawContext.beginPath();self.drawContext.moveTo(x0,y0);self.drawContext.lineTo(x1,y1);self.drawContext.lineWidth=2;self.drawContext.stroke()}if(self.sbrkSources.length>0)line(0,.75*self.canvas.height,self.canvas.width,.75*self.canvas.height);if(self.resizeMemorySources.length>0)line(0,.5*self.canvas.height,self.canvas.width,.5*self.canvas.height)}self.memoryprofiler_summary.innerHTML=html;var sort=document.getElementById("memoryProfilerSort");var sortOrder=sort.options[sort.selectedIndex].value;html="";if(document.getElementById("showHeapResizes").checked){html+='<div style="background-color: #c0c0c0"><h4>Heap resize locations:</h4>';html+=self.printHeapResizeLog(self.resizeMemorySources);html+="</div>";html+='<div style="background-color: #c0c0ff"><h4>Memory sbrk() locations:</h4>';html+=self.printHeapResizeLog(self.sbrkSources);html+="</div>"}else{if(Object.keys(self.allocationsAtLoc).length>0){var calls=[];for(var i in self.allocationsAtLoc){if(self.allocationsAtLoc[i][0]>=self.trackedCallstackMinAllocCount||self.allocationsAtLoc[i][1]>=self.trackedCallstackMinSizeBytes){calls.push(self.allocationsAtLoc[i])}}if(calls.length>0){if(sortOrder!="fixed"){var sortIdx=sortOrder=="count"?0:1;calls.sort((a,b)=>b[sortIdx]-a[sortIdx])}html+="<h4>Allocation sites with more than "+self.formatBytes(self.trackedCallstackMinSizeBytes)+" of accumulated allocations, or more than "+self.trackedCallstackMinAllocCount+" simultaneously outstanding allocations:</h4>";for(var call of calls){html+="<b>"+self.formatBytes(call[1])+"/"+call[0]+" allocs</b>: "+call[2]+"<br />"}}}}self.memoryprofiler_ptrs.innerHTML=html}};if(typeof document!="undefined"&&typeof window!="undefined"&&typeof process=="undefined"){emscriptenMemoryProfiler.initialize()}globalThis.emscriptenMemoryProfiler=emscriptenMemoryProfiler;function updateMemoryViews(){var b=wasmMemory.buffer;HEAP8=new Int8Array(b);HEAP16=new Int16Array(b);Module["HEAPU8"]=HEAPU8=new Uint8Array(b);HEAPU16=new Uint16Array(b);HEAP32=new Int32Array(b);HEAPU32=new Uint32Array(b);HEAPF32=new Float32Array(b);HEAPF64=new Float64Array(b);HEAP64=new BigInt64Array(b);HEAPU64=new BigUint64Array(b)}function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(onPreRuns)}function initRuntime(){runtimeInitialized=true;wasmExports["f"]()}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(onPostRuns)}var runDependencies=0;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module["monitorRunDependencies"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module["monitorRunDependencies"]?.(runDependencies);if(runDependencies==0){if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module["onAbort"]?.(what);what="Aborted("+what+")";err(what);ABORT=true;what+=". Build with -sASSERTIONS for more info.";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var wasmBinaryFile;function findWasmBinary(){if(Module["locateFile"]){return locateFile("hello.wasm")}return new URL("hello.wasm",import.meta.url).href}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw"both async and sync fetching of the wasm failed"}async function getWasmBinary(binaryFile){if(!wasmBinary){try{var response=await readAsync(binaryFile);return new Uint8Array(response)}catch{}}return getBinarySync(binaryFile)}async function instantiateArrayBuffer(binaryFile,imports){try{var binary=await getWasmBinary(binaryFile);var instance=await WebAssembly.instantiate(binary,imports);return instance}catch(reason){err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)}}async function instantiateAsync(binary,binaryFile,imports){if(!binary&&typeof WebAssembly.instantiateStreaming=="function"){try{var response=fetch(binaryFile,{credentials:"same-origin"});var instantiationResult=await WebAssembly.instantiateStreaming(response,imports);return instantiationResult}catch(reason){err(`wasm streaming compile failed: ${reason}`);err("falling back to ArrayBuffer instantiation")}}return instantiateArrayBuffer(binaryFile,imports)}function getWasmImports(){return{a:wasmImports}}async function createWasm(){function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports["e"];updateMemoryViews();removeRunDependency("wasm-instantiate");return wasmExports}addRunDependency("wasm-instantiate");function receiveInstantiationResult(result){return receiveInstance(result["instance"])}var info=getWasmImports();if(Module["instantiateWasm"]){return new Promise((resolve,reject)=>{Module["instantiateWasm"](info,(mod,inst)=>{resolve(receiveInstance(mod,inst))})})}wasmBinaryFile??=findWasmBinary();try{var result=await instantiateAsync(wasmBinary,wasmBinaryFile,info);var exports=receiveInstantiationResult(result);return exports}catch(e){readyPromiseReject(e);return Promise.reject(e)}}class ExitStatus{name="ExitStatus";constructor(status){this.message=`Program terminated with exit(${status})`;this.status=status}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var onPostRuns=[];var addOnPostRun=cb=>onPostRuns.push(cb);var onPreRuns=[];var addOnPreRun=cb=>onPreRuns.push(cb);var noExitRuntime=true;var stackRestore=val=>__emscripten_stack_restore(val);var stackSave=()=>_emscripten_stack_get_current();var _emscripten_memprof_sbrk_grow=(old_brk,new_brk)=>{emscriptenMemoryProfiler.onSbrkGrow(old_brk,new_brk)};var abortOnCannotGrowMemory=requestedSize=>{abort("OOM")};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;abortOnCannotGrowMemory(requestedSize)};var traceConfigure=(collector_url,application)=>{EmscriptenTrace.configure(collector_url,application)};var _emscripten_trace_configure_for_google_wtf=()=>{EmscriptenTrace.configureForGoogleWTF()};var traceEnterContext=name=>{if(EmscriptenTrace.postEnabled){var now=EmscriptenTrace.now();EmscriptenTrace.post([EmscriptenTrace.EVENT_ENTER_CONTEXT,now,name])}if(EmscriptenTrace.googleWTFEnabled){EmscriptenTrace.googleWTFEnterScope(name)}};var _emscripten_trace_exit_context=()=>{if(EmscriptenTrace.postEnabled){var now=EmscriptenTrace.now();EmscriptenTrace.post([EmscriptenTrace.EVENT_EXIT_CONTEXT,now])}if(EmscriptenTrace.googleWTFEnabled){EmscriptenTrace.googleWTFExitScope()}};var traceLogMessage=(channel,message)=>{if(EmscriptenTrace.postEnabled){var now=EmscriptenTrace.now();EmscriptenTrace.post([EmscriptenTrace.EVENT_LOG_MESSAGE,now,channel,message])}};var traceMark=message=>{if(EmscriptenTrace.postEnabled){var now=EmscriptenTrace.now();EmscriptenTrace.post([EmscriptenTrace.EVENT_LOG_MESSAGE,now,"MARK",message])}if(EmscriptenTrace.googleWTFEnabled){window["wtf"].trace.mark(message)}};var _emscripten_get_now=()=>performance.now();var EmscriptenTrace={worker:null,collectorEnabled:false,googleWTFEnabled:false,testingEnabled:false,googleWTFData:{scopeStack:[],cachedScopes:{}},DATA_VERSION:1,EVENT_ALLOCATE:"allocate",EVENT_ANNOTATE_TYPE:"annotate-type",EVENT_APPLICATION_NAME:"application-name",EVENT_ASSOCIATE_STORAGE_SIZE:"associate-storage-size",EVENT_ENTER_CONTEXT:"enter-context",EVENT_EXIT_CONTEXT:"exit-context",EVENT_FRAME_END:"frame-end",EVENT_FRAME_RATE:"frame-rate",EVENT_FRAME_START:"frame-start",EVENT_FREE:"free",EVENT_LOG_MESSAGE:"log-message",EVENT_MEMORY_LAYOUT:"memory-layout",EVENT_OFF_HEAP:"off-heap",EVENT_REALLOCATE:"reallocate",EVENT_REPORT_ERROR:"report-error",EVENT_SESSION_NAME:"session-name",EVENT_TASK_ASSOCIATE_DATA:"task-associate-data",EVENT_TASK_END:"task-end",EVENT_TASK_RESUME:"task-resume",EVENT_TASK_START:"task-start",EVENT_TASK_SUSPEND:"task-suspend",EVENT_USER_NAME:"user-name",init:()=>{Module["emscripten_trace_configure"]=traceConfigure;Module["emscripten_trace_configure_for_google_wtf"]=_emscripten_trace_configure_for_google_wtf;Module["emscripten_trace_enter_context"]=traceEnterContext;Module["emscripten_trace_exit_context"]=_emscripten_trace_exit_context;Module["emscripten_trace_log_message"]=traceLogMessage;Module["emscripten_trace_mark"]=traceMark},fetchBlob:async url=>{var rsp=await fetch(url);return rsp.blob()},configure:async(collector_url,application)=>{EmscriptenTrace.now=_emscripten_get_now;var now=new Date;var session_id=now.getTime().toString()+"_"+Math.floor(Math.random()*100+1).toString();var blob=await EmscriptenTrace.fetchBlob(collector_url+"worker.js");EmscriptenTrace.worker=new Worker(window.URL.createObjectURL(blob));EmscriptenTrace.worker.addEventListener("error",e=>{out("TRACE WORKER ERROR:");out(e)},false);EmscriptenTrace.worker.postMessage({cmd:"configure",data_version:EmscriptenTrace.DATA_VERSION,session_id,url:collector_url});EmscriptenTrace.configured=true;EmscriptenTrace.collectorEnabled=true;EmscriptenTrace.postEnabled=true;EmscriptenTrace.post([EmscriptenTrace.EVENT_APPLICATION_NAME,application]);EmscriptenTrace.post([EmscriptenTrace.EVENT_SESSION_NAME,now.toISOString()])},configureForTest:()=>{EmscriptenTrace.postEnabled=true;EmscriptenTrace.testingEnabled=true;EmscriptenTrace.now=()=>0},configureForGoogleWTF:()=>{if(window?.["wtf"]){EmscriptenTrace.googleWTFEnabled=true}else{out("GOOGLE WTF NOT AVAILABLE TO ENABLE")}},post:entry=>{if(EmscriptenTrace.postEnabled&&EmscriptenTrace.collectorEnabled){EmscriptenTrace.worker.postMessage({cmd:"post",entry})}else if(EmscriptenTrace.postEnabled&&EmscriptenTrace.testingEnabled){out("Tracing "+entry)}},googleWTFEnterScope:name=>{var scopeEvent=EmscriptenTrace.googleWTFData["cachedScopes"][name];if(!scopeEvent){scopeEvent=window["wtf"].trace.events.createScope(name);EmscriptenTrace.googleWTFData["cachedScopes"][name]=scopeEvent}var scope=scopeEvent();EmscriptenTrace.googleWTFData["scopeStack"].push(scope)},googleWTFExitScope:()=>{var scope=EmscriptenTrace.googleWTFData["scopeStack"].pop();window["wtf"].trace.leaveScope(scope)}};var _emscripten_trace_record_allocation=(address,size)=>{Module["onMalloc"]?.(address,size);if(EmscriptenTrace.postEnabled){var now=EmscriptenTrace.now();EmscriptenTrace.post([EmscriptenTrace.EVENT_ALLOCATE,now,address,size])}};var _emscripten_trace_record_free=address=>{Module["onFree"]?.(address);if(EmscriptenTrace.postEnabled){var now=EmscriptenTrace.now();EmscriptenTrace.post([EmscriptenTrace.EVENT_FREE,now,address])}};var getCFunc=ident=>{var func=Module["_"+ident];return func};var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var stackAlloc=sz=>__emscripten_stack_alloc(sz);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var UTF8Decoder=typeof TextDecoder!="undefined"?new TextDecoder:undefined;var UTF8ArrayToString=(heapOrArray,idx=0,maxBytesToRead=NaN)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str="";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):"";var ccall=(ident,returnType,argTypes,args,opts)=>{var toC={string:str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},array:arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType==="string"){return UTF8ToString(ret)}if(returnType==="boolean")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func(...cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var cwrap=(ident,returnType,argTypes,opts)=>{var numericArgs=!argTypes||argTypes.every(type=>type==="number"||type==="boolean");var numericRet=returnType!=="string";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return(...args)=>ccall(ident,returnType,argTypes,args,opts)};var stringToNewUTF8=str=>{var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8(str,ret,size);return ret};var allocateUTF8=stringToNewUTF8;EmscriptenTrace.init();{if(Module["noExitRuntime"])noExitRuntime=Module["noExitRuntime"];if(Module["print"])out=Module["print"];if(Module["printErr"])err=Module["printErr"];if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"]}Module["cwrap"]=cwrap;Module["UTF8ToString"]=UTF8ToString;Module["stringToUTF8"]=stringToUTF8;Module["lengthBytesUTF8"]=lengthBytesUTF8;Module["allocateUTF8"]=allocateUTF8;var wasmImports={c:_emscripten_memprof_sbrk_grow,d:_emscripten_resize_heap,b:_emscripten_trace_record_allocation,a:_emscripten_trace_record_free};var wasmExports=await createWasm();var ___wasm_call_ctors=wasmExports["f"];var _is_elf=Module["_is_elf"]=wasmExports["g"];var _get_entry_point=Module["_get_entry_point"]=wasmExports["h"];var _malloc=Module["_malloc"]=wasmExports["j"];var _free=Module["_free"]=wasmExports["k"];var _sbrk=wasmExports["l"];var _emscripten_stack_get_base=wasmExports["m"];var _emscripten_stack_get_end=wasmExports["n"];var __emscripten_stack_restore=wasmExports["o"];var __emscripten_stack_alloc=wasmExports["p"];var _emscripten_stack_get_current=wasmExports["q"];var ___heap_base=Module["___heap_base"]=67072;function run(){if(runDependencies>0){dependenciesFulfilled=run;return}preRun();if(runDependencies>0){dependenciesFulfilled=run;return}function doRun(){Module["calledRun"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);Module["onRuntimeInitialized"]?.();postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(()=>{setTimeout(()=>Module["setStatus"](""),1);doRun()},1)}else{doRun()}}function preInit(){if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].shift()()}}}preInit();run();moduleRtn=readyPromise;


  return moduleRtn;
}
);
})();
export default Module;
